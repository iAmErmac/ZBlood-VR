
Class BloodOffhandWeaponHandler : EventHandler
{
	override void WorldTick()
	{
		if (_isTitlemap) { return; } //we dont need to initiate the mod if it's a titlemap
		
		PlayerInfo player = players[consolePlayer];
		if (player == null) { return; }
		
		HandleOffhandAutoSwitchWeapon();
		HandleSprayCanIgnition();
		
		if (_isInitialized) return;
		
		if(!player.mo.CountInv("Zippo")) player.mo.setinventory("Zippo", 1, false); //Give player lighter
		
		if(player.mo.CountInv("RemoteDynamite") && !player.mo.CountInv("BombRemote")) player.mo.setinventory("BombRemote", 1, false); //Give player remote when picking up remote bombs
		
		if(!player.mo.CountInv("CalebOffHandFist")) player.mo.setinventory("CalebOffHandFist", 1, false); //Give player off-hand fist weapon
		
		Weapon weap = Weapon(player.mo.FindInventory("CalebOffHandFist"));
		player.OffhandWeapon = weap;
		player.PendingWeapon = weap;
		player.mo.BringUpWeapon();
		_isInitialized = true;
	}
	
	void HandleOffhandAutoSwitchWeapon()
	{
		PlayerInfo player = players[consolePlayer];
		
		if((player.ReadyWeapon IS "Dynamite" || player.ReadyWeapon IS "Spraycan") && !(player.OffhandWeapon IS "Zippo"))
		{
			Weapon weap = Weapon(player.mo.FindInventory("Zippo"));
			player.OffhandWeapon = weap;
			player.PendingWeapon = weap;
			player.mo.BringUpWeapon();
		}
		
		if(player.ReadyWeapon IS "RemoteDynamite")
		{
			if(!player.mo.CountInv("BombRemote")) player.mo.setinventory("BombRemote", 1, false);
			
			if(!(player.OffhandWeapon IS "BombRemote"))
			{
				Weapon weap = Weapon(player.mo.FindInventory("BombRemote"));
				player.OffhandWeapon = weap;
				player.PendingWeapon = weap;
				player.mo.BringUpWeapon();
			}
		}
	}
	
	void HandleSprayCanIgnition()
	{
		PlayerInfo player = players[consolePlayer];
		if(player.ReadyWeapon IS "Spraycan" && player.mo.CountInv("IgnitingSprayCan"))
		{
			if(!tiny_flame) tiny_flame = Actor.Spawn("SpraycanFlameIgnite", player.mo.AttackPos);
			tiny_flame.SetOrigin(player.mo.AttackPos, true);
		}
		else
			tiny_flame = NULL;
	}
	
	override void OnRegister()
	{
		_isInitialized = false;
	}

	override void WorldLoaded(WorldEvent event)
	{
		_isTitlemap = CheckTitlemap();
	}

	private static bool CheckTitlemap()
	{
		bool isTitlemap = (level.mapname == "TITLEMAP");
		return isTitlemap;
	}
	
	private bool _isTitlemap;
	private bool _isInitialized;
	private actor tiny_flame;
}

Class IgnitingSprayCan : Inventory
{
	Default
	{
	inventory.maxamount 1;
	}
}

Class SpraycanFlameIgnite : Actor
{
	Default
	{
	+NOBLOCKMAP;
	+NOGRAVITY;
	+ALLOWPARTICLES;
	+RANDOMIZE;
	+BRIGHT;
	Renderstyle "Add";
	Alpha 1;
	Speed 0;
    VSpeed 0;
	}
	
	States
	{
		Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SetScale(0.03);
		SFLM A 2;
		TNT1 A 0 A_SetScale(0.04);
		SFLM B 2;
		TNT1 A 0 A_SetScale(0.05);
		SFLM C 2;
		TNT1 A 0 A_SetScale(0.06);
		SFLM D 2;
		TNT1 A 0 A_SetScale(0.07);
		SFLM E 2;
		TNT1 A 0 A_SetScale(0.08);
		SFLM F 2;
		TNT1 A 0 A_SetScale(0.09);
		SFLM GA 2;
		Stop;
	}
}