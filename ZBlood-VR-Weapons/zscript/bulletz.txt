/*
*
* BulletZ - dawnbreez (https://forum.zdoom.org/viewtopic.php?f=43&t=59487)
*
*/

Class BulletZHandler : EventHandler
{
	
	override void CheckReplacement(ReplaceEvent e)
	{
		_isTitlemap = CheckTitlemap();
		if (_isTitlemap) return;
		
		if(e.Replacee is "ZBulletCultist" && Cvar.FindCvar("zblood_bulletz").GetBool()) e.Replacement = 'BulletZPuff';
	}

	private static bool CheckTitlemap()
	{
		bool isTitlemap = (level.mapname == "TITLEMAP");
		return isTitlemap;
	}
	
	private bool _isTitlemap;
}

//Special thanks to WildWeasel's Cola 3 for the idea of replacing the bulletpuff.
Class BulletZPuff : BulletPuff
{
	Default
	{
		+NODECAL;
		+PUFFONACTORS;
		+ALLOWTHRUFLAGS;
		+THRUACTORS;
		+ALWAYSPUFF;
		+PUFFGETSOWNER;
		+NOBLOOD;
		+BLOODLESSIMPACT;
		+SKYEXPLODE;
		+BOUNCEONWALLS;
		+USEBOUNCESTATE;
		-BLOODSPLATTER;
		-ALLOWPARTICLES;
		-RANDOMIZE;
		BounceType "Doom";
		VSpeed 0;
		DamageType "DummyDamage";
	}
	States
	{
	Spawn:
	Melee:
	Death:
	XDeath:	
	Death.Sky:
	Bounce.Wall:
		PUFF A 1 Bright NoDelay
		{
			Vector2 ownerVec = Vec2To(target);
			double distance = ownerVec.Length();
			Actor oldtarget = target.target;
			target.target = self;
			let bullet = BulletZRound(target.A_SpawnProjectile("BulletZRound"));
			int bullet_speed = CVar.FindCVar("zblood_bulletspeed").GetInt();
			bullet.speed = bullet_speed;
			bullet.SetTime(distance / bullet_speed);
			target.target = oldtarget;
		}
		Stop;
	}
}

class BulletZRound : FastProjectile
{
	int speed;
	int timeleft;
	bool isDead;
	property timer: timeleft;
	
	void SetTime(int time)
	{
		timeleft = max(time,1);
		isDead = false;
	}
	
	/*override void Tick()
	{
		super.Tick();
		timeleft -= 1;
		if(timeleft<0 && !self.isDead)
		{
			self.Die(self,self);
			self.isDead=true;
		}
	}*/
	
	Default
	{
		Radius 3;
		Height 3;
		Speed 1;
		DamageFunction 4*random(1,3);
		Projectile;
		RenderStyle "Add";
		Alpha 0.6;
		+HITTRACER;
		+GETOWNER;
		decal "ZBloodBulletChip1";
	}
	States
	{
		Spawn:
			PUFF A 0 NoDelay
			{
				int speed = CVar.FindCVar("zblood_bulletspeed").GetInt();
				A_ScaleVelocity(speed);
			}
		FlyLoop:
			PUFF A 1 Bright;
			Loop;
		XDeath:
			TNT1 A 2
			{
				if(tracer != target)
				{
					A_SpawnProjectile("blood",0);
				}
			}
			Stop;
		Death:
		Crash:
			TNT1 A 0;
			TNT1 A 0 A_PlaySound("Shoot/Bullet");
			TNT1 A 1 A_SpawnItemEx("ZBPUFFSmoke", 0,0,0, 0,0,1, 0, 160);
			TNT1 A 1;
			Stop;
	}
}

Class ZBPUFFSmoke : BulletPuff
{
	Default
	{
	+NOTELEPORT;
	Radius 1;
	Height 1;
	Damage 0;
	+RANDOMIZE;
	+ALLOWPARTICLES;
	+DONTSPLASH;
	+NOBLOCKMAP;
	+Thruspecies;
	+ThruGhost;
	RenderStyle "Translucent";
	Alpha 0.75;
	scale 0.8;
	
	}
	
	States
	{
	Spawn:
		PUFF A 0;
		PUFF A 0 A_Jump(128,"Spawn2");
		PUFF AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHH 1 A_FadeOut(0.01);
		stop;
	Spawn2:
		PUFF IIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPP 1 A_FadeOut(0.01);
		stop;
	XDeath:
		TNT1 A 2;
		Stop;
	}
}