Class Zippo : BloodWeaponZ
{
	Default
	{
	Weapon.SelectionOrder 5101;
	Weapon.Kickback 100;
	Weapon.SlotNumber 1;
	Obituary "%o was punched to death by %k.";
	Tag "Lighter";
	+WEAPON.NOALERT;
	+WEAPON.WIMPY_WEAPON;
	+WEAPON.MELEEWEAPON;
	+WEAPON.OFFHANDWEAPON;
	+WEAPON.NOHANDSWITCH;
	+WEAPON.CHEATNOTWEAPON;
	+INVENTORY.UNDROPPABLE;
	+INVENTORY.UNTOSSABLE;
	+INVENTORY.UNCLEARABLE;
	Inventory.AltHUDIcon "ZIPOA0";
	}
	
	override void tick()
	{
		if(!owner || owner.health <= 0)
			return;
			
		let player = owner.player.mo;
		
		if(!(owner.player.OffhandWeapon is "Zippo"))
		{
			player.SetInventory("ZippoOpen", 0);
			player.SetInventory("PutOutFlame", 0);
		}
		
		if(owner.player.ReadyWeapon is "Dynamite" && player.CountInv("ZippoOpen") > 0)
		{
			int hand_dist = level.vec3diff(player.AttackPos, player.OffhandPos).length();
			iF(hand_dist < 8)
				player.SetInventory("LighterReady", 1, false);
			else
				player.SetInventory("LighterReady", 0, false);
		}
		else if(owner.player.ReadyWeapon is "Spraycan" && player.CountInv("ZippoOpen") > 0)
		{
			//measure hand distance from multiple coords so less chance of failure
			Double angle = owner.angle;
			Double pitch = owner.AimTarget() ? owner.BulletSlope(null, ALF_PORTALRESTRICT) : owner.pitch;
			
			Actor tempPuff = player.LineAttack(angle-90, 3, pitch, 0, "none", "bloodDummyPuff", LAF_NOIMPACTDECAL | LAF_NOINTERACT | LAF_NORANDOMPUFFZ);
			Actor tempPuff2 = player.LineAttack(angle, 3, pitch, 0, "none", "bloodDummyPuff", LAF_NOIMPACTDECAL | LAF_NOINTERACT | LAF_NORANDOMPUFFZ);
			Actor tempPuff3 = player.LineAttack(angle+90, 3, pitch, 0, "none", "bloodDummyPuff", LAF_NOIMPACTDECAL | LAF_NOINTERACT | LAF_NORANDOMPUFFZ);
			
			int hand_dist = level.vec3diff(tempPuff.pos, player.OffhandPos).length();
			int hand_dist2 = level.vec3diff(tempPuff2.pos, player.OffhandPos).length();
			int hand_dist3 = level.vec3diff(tempPuff3.pos, player.OffhandPos).length();
			
			iF(hand_dist < 3 || hand_dist2 < 3 || hand_dist3 < 3)
				player.SetInventory("LighterReady", 1, false);
			else
				player.SetInventory("LighterReady", 0, false);
		}
		else
		{
			player.SetInventory("LighterReady", 0, false);
		}
		
		if(player.CountInv("UsingLighter") > 0) owner.Player.SetPSprite(PSP_OFFHANDWEAPON, FindState("ReadyDisabled"));
	}

	States
	{
	Ready:
		TNT1 A 0;
		ZIPO A 0 A_JumpIfInventory("UsingLighter", 1, "ReadyDisabled");
		ZIPO A 0 A_ReplaceSprite("zblood_models", "ZIPV");
		"####" # 0 A_JumpIf(waterlevel>2, "Cannot");
		"####" A 0 A_JumpIfInventory("ZippoOpen", 1, "ReadyLit");
		"####" A 1 A_WeaponReady;
		Loop;
	ReadyLit:
		"####" B 0 A_TakeInventory("PutOutFlame", 1);
		"####" B 0 A_FireProjectile("FlameDynLightSpawner", 0, 0);
		"####" B 1 A_WeaponReady();
		Goto Ready;
	ReadyDisabled:
		TNT1 A 0 A_GiveInventory("PutOutFlame", 1);
		TNT1 A 1 A_FireProjectile("FlameDynLightSpawner", 0, 0);
		TNT1 A 0 A_JumpIfInventory("UsingLighter", 1, "ReadyDisabled");
		TNT1 A 0 A_Overlay(1100+random(1,10), "Flame");
		Goto Ready;
	Deselect:
		ZIPO A 0 A_ReplaceSprite("zblood_models", "ZIPV");
		"####" A 0 A_JumpIfInventory("ZippoOpen", 1, "DeselectCloseLid");
		"####" # 0 A_JumpIf(GetCVar("zblood_fastswitch") == 0, 2);
		"####" # 1 A_Lower(60);
		wait;
		"####" # 1 A_Lower;
		wait;
	DeselectCloseLid:
		"####" A 0 A_TakeInventory("ZippoOpen", 1);
		"####" A 0 A_GiveInventory("PutOutFlame", 1);
		"####" # 0 A_JumpIf(GetCVar("zblood_fastswitch") == 0, 2);
		"####" # 1 A_Lower(60);
		wait;
		"####" GFE 2;
		"####" A 0 A_StartSound("Lighter/Close", CHAN_WEAPON);
		"####" A 1 A_Lower;
		wait;
	Select:
		ZIPO A 0 A_ReplaceSprite("zblood_models", "ZIPV");
		"####" # 0 A_JumpIf(GetCVar("zblood_fastswitch") == 0, 2);
		"####" # 1 A_Raise(60);
		wait;
		"####" # 1 A_Raise;
		wait;
	Fire:
		"####" # 0 A_JumpIf(waterlevel>2, "Cannot");
		"####" A 0 A_JumpIfInventory("ZippoOpen", 1, "CloseLid");
		"####" A 0 A_StartSound("Lighter/Open", CHAN_WEAPON);
		"####" EFG 2;
		"####" B 0 
		{
			A_GiveInventory("ZippoOpen", 1);
			A_StartSound("Lighter/Light", CHAN_WEAPON);
			A_TakeInventory("PutOutFlame", 1);
			HapticHelper.BuzzOffhand();
			A_Overlay(1100+random(1,10), "Flame");
		}
		"####" BBBBBB 1 A_FireProjectile("FlameDynLightSpawner", 0, 0);
		Goto Ready;
	CloseLid:
		"####" # 0 A_GiveInventory("PutOutFlame", 1);
		"####" GFE 2;
		"####" A 0 A_TakeInventory("ZippoOpen", 1);
		"####" A 0 A_StartSound("Lighter/Close", CHAN_WEAPON);
		"####" A 10;
		Goto Ready;
	Cannot:
		"####" A 1 A_JumpIfInventory("ZippoOpen", 1, "CloseLid");
		Goto Ready;
	Flame:
		TNT1 A 1;
		ZIPF A 0 A_JumpIf(zblood_models == 1, "VoxelFlame");
		"####" BBB 1 BRIGHT A_JumpIfInventory("PutOutFlame", 1, "PutOut");
		"####" CCC 1 BRIGHT A_JumpIfInventory("PutOutFlame", 1, "PutOut");
		"####" DDD 1 BRIGHT A_JumpIfInventory("PutOutFlame", 1, "PutOut");
		Goto Flame+1;
	VoxelFlame:
		ZPVF BBB 1 BRIGHT A_JumpIfInventory("PutOutFlame", 1, "PutOut");
		"####" CCC 1 BRIGHT A_JumpIfInventory("PutOutFlame", 1, "PutOut");
		"####" DDD 1 BRIGHT A_JumpIfInventory("PutOutFlame", 1, "PutOut");
		Goto Flame+1;
	PutOut:
		TNT1 A 1;
		Stop;
	Dummy:
		ZIPV ABCDEFGHI 1;
		stop;
	}
}

Class ZippoOpen : Inventory
{
	Default
	{
	inventory.maxamount 1;
	}
}

Class PutOutFlame : Inventory
{
	Default
	{
	inventory.maxamount 1;
	}
}

Class LighterReady : Inventory
{
	Default
	{
	inventory.maxamount 1;
	}
}

Class UsingLighter : Inventory
{
	Default
	{
	inventory.maxamount 1;
	}
}

Class FlameDynLight : Actor
{
	Default
	{
	Mass        0;
	Radius      1;
	Height      2;
	Health		0x7FFFFFFF;

	+NOBLOCKMAP;
	+NOGRAVITY;
	+BLOODLESSIMPACT;
	+GHOST;
	+NOTONAUTOMAP;
	+SKYEXPLODE;
	+NOCLIP;
	}

	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_AttachLight("zippo_flame1", DynamicLight.RandomFlickerLight, "FF F4 A1", 7, 10, DYNAMICLIGHT.LF_DONTLIGHTSELF | DYNAMICLIGHT.LF_ATTENUATE);
		TNT1 A 1;
		Stop;
	}
}

Class FlameDynLightSpawner : Actor
{
	Default
	{
	Mass        0;
	Radius      1;
	Height      2;
	Health		0x7FFFFFFF;

	+NOBLOCKMAP;
	+NOGRAVITY;
	+BLOODLESSIMPACT;
	+GHOST;
	+NOTONAUTOMAP;
	+SKYEXPLODE;
	+NOCLIP;
	}

	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("FlameDynLight", 0, 0, 2);
		TNT1 A 1;
		Stop;
	}
}